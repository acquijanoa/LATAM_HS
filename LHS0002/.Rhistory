setwd("~/Documentos/Research/LATAM_HS/LHS0002")
library(heaven)
library(haven)
library(haven)
library(haven)
setwd("~/Documentos/Research/LATAM_HS/LHS0002")
setwd("~/Documentos/Research/LATAM_HS/LHS0002")
dir()
dir("data")
data = read_sas("data/lhs000201.sas7bdat")
data
data$MDD
library(survey)
attach(data)
## Creating the design
des.mod = survey::svydesign(data = data,
strata = ~stratum,
weights = ~wt)
## Creating the design
des.mod = survey::svydesign(data = data,
ids =~PSU
strata =~stratum,
## Creating the design
des.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~wt)
## Creating the design
des.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~WT)
des.mod
## Creating the design
des.mod = survey::svydesign(data = data,
ids =~PSU, strata =~stratum,  weights =~WT)
## Creating the design
desgn.mod = survey::svydesign(data = data,
ids =~PSU, strata =~stratum,  weights =~WT)
### Design-based estimates by department
mod = survey::svyglm(MDD~DEPARTMENT,
family = binomial, design = desgn.mod)
## Creating the design
desgn.mod = survey::svydesign(data = data, nest = T,
ids =~PSU, strata =~stratum,  weights =~WT)
### Design-based estimates by department
mod = survey::svyglm(MDD~DEPARTMENT,
family = binomial, design = desgn.mod)
### Design-based estimates by department
mod = survey::svyglm(MDD~DEPARTMENT + 0,
family = binomial, design = desgn.mod)
desgn.sub = subset(desgn.mod, MDD_DOMAIN %in% c(0,1) )
desgn.sub
desgn.sub = subset(desgn.mod, in_6_23m == 1)
### Design-based estimates by department
mod = survey::svyglm(MDD~I(MDD_DOMAIN %in% c(0,1)) + 0,
family = binomial, design = desgn.sub)
data$MDD
type(data$MDD)
class(data$MDD)
### Design-based estimates by department
mod = survey::svyglm(MDD~DEPARTMENT) + 0,
### Design-based estimates by department
mod = survey::svyglm(MDD~DEPARTMENT + 0,  family = binomial, design = desgn.sub)
summary(mod)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) + 0,  family = binomial, design = desgn.sub)
summary(mod)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) + 0,  family = quasibinomial, design = desgn.sub)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) + 0,  family = quasibinomial, design = desgn.sub)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) + 0,
family = quasibinomial, design = desgn.sub)
summary(mod)
mod$coefficients
exp(mod$coefficients)
exp(mod$coefficients)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) + 0,
family = quasibinomial(link="logit"), design = desgn.sub)
exp(mod$coefficients)
predict(mod, type = "response")
mod$coefficients
1/(1+exp(-1*mod$coefficients))
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) + 0,
family = quasibinomial(link="logit"), design = desgn.sub)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) -1,
family = quasibinomial(link="logit"), design = desgn.sub)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) -1,
family = quasibinomial(link="logit"), design = desgn.sub)
1/(1+exp(-1*mod$coefficients))
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) -1,
family = quasibinomial(link="logit"), design = desgn.sub)
exp(mod$coefficients)
1/(1+exp(-1*mod$coefficients))
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) + 1,
family = quasibinomial(link="logit"), design = desgn.sub)
1/(1+exp(-1*mod$coefficients))
1/(1+exp(-1*mod$coefficients))
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) - 1,
family = quasibinomial(link="logit"), design = desgn.sub)
1/(1+exp(-1*mod$coefficients))
predict(mod, type = "reponse")
predict(mod, type = "response")
data$pred_ = predict(mod, type = "response")
data_ = data %>% filter(in_6_23m == 1)
library(dplyr)
data_ = data %>% filter(in_6_23m == 1)
data_$pred = predict(mod, type = "response")
predict(mod, type = "response")[,1]
data_$pred
data_$pred = predict(mod, type = "response",se.fit = F)
data_$pred
predict(mod, type = "response",se.fit = F)
predict(mod, type = "response", vcov = F)
predict(mod, type = "response")$response
data_ %>% select(DEPARTMENT,pred)
data_ %>% select(DEPARTMENT,pred) %>% unique()
data_ %>% select(DEPARTMENT,pred) %>% unique() %>% sort(DEPARTMENT)
data_ %>% select(DEPARTMENT,pred) %>% unique() %>% arrange(DEPARTMENT)
predict(mod, type = "response")
data_$pred.se = predict(mod, type = "response")$SE
(predict(mod, type = "response"))$SE
str(predict(mod, type = "response"))
data_$pred.se = str(predict(mod, type = "response"))
data_$pred.se = attr(predict(mod, type = "response"),"var")
data_ %>% select(DEPARTMENT,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
census<-read.csv("age_gender_strata.csv")
setwd("~/Downloads/SpatialSurveyExample")
census<-read.csv("age_gender_strata.csv")
census
N.i<-data.frame(area=census[,1],fpc=apply(census[,2:7],1,sum))
N.i
library(haven)
library(survey)
library(dplyr)
setwd("~/Documentos/Research/LATAM_HS/LHS0002")
## Reading the data
data = read_sas("data/lhs000201.sas7bdat")
data_ = data %>% filter(in_6_23m == 1)
attach(data)
## Creating the design
desgn.mod = survey::svydesign(data = data, nest = T,
ids =~PSU, strata =~stratum,  weights =~WT)
desgn.sub = subset(desgn.mod, in_6_23m == 1)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) - 1,
family = quasibinomial(link="logit"), design = desgn.sub)
data_$pred = predict(mod, type = "response")
data_$pred.se = attr(predict(mod, type = "response"),"var")
data_ %>% select(DEPARTMENT,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
##### Read in Survey data ########
sim.survey<-read.csv("survey.csv")
##### Read in Survey data ########
sim.survey<-read.csv("survey.csv")
################################################################################
#-------------------------------#
# read in zipcode shapefiles
zipcode.shp <- readShapePoly(
paste(dir, "/WAzipShapefiles/xxpoly", sep=""))
plot(zipcode.shp, axes=TRUE)
dim(zipcode.shp)
# load my functions
source(paste(dir, "/functions.R", sep=""))
### Change the directory to match your working directory ###
dir<-"/SpatialSurveyExample"
setwd(dir)
setwd(dir)
setwd("~/")
setwd("~/Downloads/SpatialSurveyExample")
tol <- 10^{-7}
# load R libraries
library(maptools); library(maps); library(RColorBrewer);
library(shapefiles);
library(INLA);library(MASS)
library(survey)
# load my functions
source(paste(dir, "/functions.R", sep=""))
dir
################################################################################
#-------------------------------#
# read in zipcode shapefiles
zipcode.shp <- readShapePoly(
paste(dir, "/WAzipShapefiles/xxpoly", sep=""))
################################################################################
#-------------------------------#
# read in zipcode shapefiles
zipcode.shp <- readShapePoly(paste(dir, "/WAzipShapefiles/xxpoly", sep=""))
plot(zipcode.shp, axes=TRUE)
dim(zipcode.shp)
################################################################################
#-------------------------------#
# read in zipcode shapefiles
zipcode.shp <- readShapePoly("/WAzipShapefiles/xxpoly.shp")
dir()
################################################################################
#-------------------------------#
# read in zipcode shapefiles
zipcode.shp <- readShapePoly("WAzipShapefiles/xxpoly.shp")
plot(zipcode.shp, axes=TRUE)
dim(zipcode.shp)
dim(zipcode.shp)
zipcode.shp@data[1:5,]
zipcode <- data.frame(ID=1:nrow(zipcode.shp@data), area=zipcode.shp@data$zip_1)
dim(zipcode.shp)
zipcode.shp@data[1:5,]
zipcode <- data.frame(ID=1:nrow(zipcode.shp@data), area=zipcode.shp@data$zip_1)
head(zipcode)
n.area <- nrow(zipcode)
n.area
census<-read.csv("age_gender_strata.csv")
N.i<-data.frame(area=census[,1],fpc=apply(census[,2:7],1,sum))
N.j<-apply(census,2,sum)[2:7]
N.i
N.j
n.strat<-6
##### Read in Survey data ########
sim.survey<-read.csv("survey.csv")
######-------- post-stratification-------------########
# poststratification based on strata
N.hat.j<- aggregate(sim.survey$wt1, by=list(sim.survey$strat), FUN=sum)
N.hat.j
# post-stratification weight
ratio <- N.j/N.hat.j
ratio
ratio <- ratio$x
wt2.strat <- data.frame(strat=1:n.strat, wt2=ratio)
wt2.strat
# assign poststratification weight
sim.survey <- merge(sim.survey, wt2.strat, by="strat")
# final weight is: wt1*wt2
sim.survey$wt <- sim.survey$wt1 * sim.survey$wt2
#-----------------------------------------------------------------#
# define p.hat.j
sim.survey$prod <- sim.survey$diat * sim.survey$wt
numt <-  aggregate(sim.survey$prod, by=list(sim.survey$strat), FUN=sum)
denot <-  aggregate(sim.survey$wt, by=list(sim.survey$strat), FUN=sum)
p.hat.j <- numt$x/denot$x
p.hat.j <- data.frame(strat=1:length(p.hat.j), p.hat.j=p.hat.j)
summary(p.hat.j)
datan.bystrat <- data.bystrat(data=sim.survey, area=zipcode$area, n.strat=n.strat, resp.col="diat", strat.col="strat")
??data.bystrat
?data.bystrat
sim.survey2 <- merge(sim.survey, N.i, by="area")
my.svydesign <- svydesign(id= ~1,
strata=~area,
weights= ~ wt1,
data=sim.survey2,
fpc=~fpc)
sim.survey2
my.svydesign <- svydesign(id= ~1,
strata=~area,
weights= ~ wt1,
data=sim.survey2,
fpc=~fpc)
my.svydesign
my.svydesign <- svydesign(id= ~1,
strata=~area,
weights= ~ wt1,
data=sim.survey2)
my.svydesign
my.svydesign <- svydesign(id= ~1,
strata=~area,
weights= ~ wt1,
data=sim.survey2,
fpc=~fpc)
my.svydesign
## with postStratify
pop.types <- data.frame(strat=1:6, Freq=c(N.j))
pop.types
my.svydesignp <- postStratify(my.svydesign, ~strat, pop.types)
my.svydesignp
TL.est.p <- svyby(~diat, ~area, svymean, design=my.svydesignp)
head(TL.est.p)
#####-------- calculate adjusted m*, y*  for each of the small area
m.star <- y.star <- m <- y <- p.star <- TL.var <-  rep(NA, n.area)
data_ %>% select(DEPARTMENT,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) - 1,
family = quasibinomial(link="logit"), design = desgn.sub)
data_$pred = predict(mod, type = "response")
data_$pred.se = attr(predict(mod, type = "response"),"var")
data_ %>% select(DEPARTMENT,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
data_
setwd("~/Documentos/Research/LATAM_HS/LHS0002")
library(haven)
library(survey)
library(dplyr)
setwd("~/Documentos/Research/LATAM_HS/LHS0002")
## Reading the data
data = read_sas("data/lhs000201.sas7bdat")
data_ = data %>% filter(in_6_23m == 1)
attach(data)
## Creating the design
desgn.mod = survey::svydesign(data = data, nest = T,
ids =~PSU, strata =~stratum,  weights =~WT)
desgn.sub = subset(desgn.mod, in_6_23m == 1)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) - 1,
family = quasibinomial(link="logit"), design = desgn.sub)
data_$pred = predict(mod, type = "response")
data_$pred.se = attr(predict(mod, type = "response"),"var")
data_ %>% select(DEPARTMENT,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
desgn.sub
## Creating the design
desgn.mod = survey::svydesign(data = data,
nest = T,
ids =~PSU,
strata =~stratum,
weights =~WT, check.strata = T)
## Creating the design
desgn.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~WT, check.strata = T)
desgn.mod
## Creating the design
desgn.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~WT, check.strata = T)
## Creating the design
desgn.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~WT,
check.strata = T)
desgn.sub = subset(desgn.mod, in_6_23m == 1)
desgn.sub
## Creating the design
desgn.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~WT,
check.strata = T)
desgn.sub = subset(desgn.mod, in_6_23m == 1)
### Design-based estimates by department
mod = survey::svyglm(MDD~factor(DEPARTMENT) - 1,
family = quasibinomial(link="logit"), design = desgn.sub)
data_$pred = predict(mod, type = "response")
data_$pred.se = attr(predict(mod, type = "response"),"var")
data_ %>% select(DEPARTMENT,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
data_
library(haven)
library(survey)
library(dplyr)
setwd("~/Documentos/Research/LATAM_HS/LHS0002")
## Reading the data
data = read_sas("data/lhs000201.sas7bdat")
data_ = data %>% filter(in_6_23m == 1)
attach(data)
## Creating the design
desgn.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~WT,
check.strata = T)
desgn.sub = subset(desgn.mod, in_6_23m == 1)
### Design-based estimates by department
mod = survey::svyglm(MDD~ factor(DEPARTMENT),
family = quasibinomial(link="logit"), design = desgn.sub)
summary(mod)
### Design-based estimates by department
mod = survey::svyglm(MDD~ factor(DEPARTMENT),
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
### Design-based estimates by department
mod = survey::svyglm(MDD~ factor(DEPARTMENT)-1,
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
exp(mod$coefficients)
### Design-based estimates by department
mod = survey::svyglm(MDD~ factor(DEPARTMENT)+factor(URBAN)-1,
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
exp(mod$coefficients)
### Design-based estimates by department
mod = survey::svyglm(MDD~ factor(DEPARTMENT)+factor(URBAN)+factor(MEDUCATION_C5)-1,
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
exp(mod$coefficients)
summary(mod)
mod = survey::svyglm(MDD~ factor(DEPARTMENT)+factor(URBAN)+factor(MEDUCATION_C5)-1,
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
mod = survey::svyglm(MDD~ factor(DEPARTMENT)+factor(URBAN)+factor(MEDUCATION_C5),
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
mod = survey::svyglm(MDD~ factor(DEPARTMENT)+factor(URBAN)+factor(MEDUCATION_C5),
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
exp(mod$coefficients)
summary(mod$coefficients)
exp(mod$coefficients)
exp(mod$coefficients)
### Design-based estimates by department
mod = survey::svyglm(MDD~ factor(DEPARTMENT)+factor(URBAN),
family = quasibinomial(link="log"), design = desgn.sub)
exp(mod$coefficients)
data_$pred = predict(mod, type = "link")
data_$pred
data_$pred = log(predict(mod, type = "link"))
data_$pred = exp(predict(mod, type = "link"))
data_$pred.se = attr(predict(mod, type = "response"),"var")
data_ %>% select(DEPARTMENT,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
data_ %>% select(DEPARTMENT,URBAN,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT)
data_ %>% select(DEPARTMENT,URBAN,pred,pred.se) %>% unique() %>% arrange(DEPARTMENT) %>% View()
data_ %>% select(DEPARTMENT,URBAN,pred,pred.se) %>%
unique() %>% arrange(DEPARTMENT) %>% View()
library(haven)
library(survey)
library(dplyr)
setwd("~/Documentos/Research/LATAM_HS/LHS0002")
## Reading the data
data = read_sas("data/lhs000201.sas7bdat")
data_ = data %>% filter(in_6_23m == 1)
attach(data)
## Creating the design
desgn.mod = survey::svydesign(data = data,
ids =~PSU,
strata =~stratum,
weights =~WT,
check.strata = T)
desgn.sub = subset(desgn.mod, in_6_23m == 1)
### Design-based estimates by department
mod = survey::svyglm(MDD~ factor(DEPARTMENT)+factor(URBAN),
family = quasibinomial(link="log"), design = desgn.sub)
summary(mod)
data_$pred = exp(predict(mod, type = "link"))
data_$pred.se = attr(predict(mod, type = "response"),"var")
data_ %>% select(DEPARTMENT,URBAN,pred,pred.se) %>%
unique() %>% arrange(DEPARTMENT) %>% View()
